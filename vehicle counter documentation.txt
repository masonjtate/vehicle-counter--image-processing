# Introduction-
	I love the idea of smart cities. The thought of automated smart energy systems, electrical grids, one-touch access ports – it’s an enthralling concept! Honestly, it’s a dream for a data scientist and I’m delighted that a lot of cities around the world are moving towards becoming smarter.
One of the core components of a smart city is automated traffic management. And that got me thinking – could I use my data science chops to build a vehicle detection model that could play a part in smart traffic management?
Think about it – if you could integrate a vehicle detection system in a traffic light camera, you could easily track a number of useful things simultaneously:

How many vehicles are present at the traffic junction during the day?
What time does the traffic build up?
What kind of vehicles are traversing the junction (heavy vehicles, cars, etc.)?
Is there a way to optimize the traffic and distribute it through a different street?
And so on. The applications are endless!

Us humans can easily detect and recognize objects from complex scenes in a flash. Translating that thought process to a machine, however, requires us to learn the art of object detection using computer vision algorithms.
So in this project, we will be building an automatic vehicle detector and counter model. Here’s a taste of what you can expect:

In our project First we identifies vehicles in a given frame of video and returns a list of bounding boxes around the vehicles to the tracker. 
The tracker uses the bounding boxes to track the vehicles in subsequent frames. 
The detector is also used to update trackers periodically to ensure that they are still tracking the vehicles correctly. 
The counter draws a counting lines across the road. When a vehicle crosses the line, the vehicle count is incremented.
We repeat the same process for multiple vehicles simultaneously. 


####   steps followed while making this project:-----------------------
1.Read the video frame by frame.

2.Apply some fileters to the frame(dilation, etc.).

3.Use BackgroundSubtractor to split the foreground from background(white-foreground, black-background).

4.Detect the contours of the foreground(moving objects).

5.Calculate the centroid of each moving object.

6.For each centroid, detect if there's a nearby centroid of the last frame. If so, assign them to the same vehicle.

7.For each vehicle, detect whether it crossed the target line.


##-----------------The Idea Behind Detecting Moving Objects in Videos--------------
Object detection is a fascinating field in computer vision. It goes to a whole new level when we’re dealing with video data. The complexity rises up a notch, but so do the rewards!
We can perform super useful high-value tasks such as surveillance, traffic management, fighting crime, etc. using object detection algorithms

The moving-object detector can handle the following two situations: static background and moving background. 
For static background, a pixel-level video foreground detector is given to detect vehicles, which can update background model continuously. 
For moving background, image-registration is employed to estimate the camera motion, which allows the vehicles to be detected in a reference coordinate system.
